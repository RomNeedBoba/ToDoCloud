name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH key
      - name: Set up SSH key
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}  # Get the base64-encoded private key from GitHub secrets
        run: |
          # Decode the private key from base64 and save it to a file
          echo "$EC2_PRIVATE_KEY" | base64 --decode > cloudRom.pem
          chmod 600 cloudRom.pem

          # Start the SSH agent and add the private key
          eval $(ssh-agent -s)
          ssh-add cloudRom.pem

      # Step 3: SSH into EC2 and deploy the app
      - name: SSH into EC2 and deploy the app
        env:
          EC2_USER: ec2-user  # EC2 instance username
          EC2_HOST: ${{ secrets.EC2_HOST }}  # EC2 instance public IP or hostname from GitHub secrets
        run: |
          # SSH into the EC2 instance and deploy the app
          ssh -o StrictHostKeyChecking=no -i cloudRom.pem $EC2_USER@$EC2_HOST << 'EOF'
            # Navigate to home directory
            cd /home/ec2-user

            # Stop and remove existing container if running
            if sudo docker ps -q -f name=my_todo_app; then
              sudo docker stop my_todo_app
              sudo docker rm my_todo_app
            fi

            # Clean up unused images to free space
            sudo docker system prune -f

            # Clone the latest code
            git clone https://github.com/***/ToDoCloud.git
            cd ToDoCloud

            # Create .env file with environment variables
            cat > .env << EOF_ENV
            DB_HOST=***
            DB_USER=***
            DB_PASSWORD=***
            DB_NAME=***
            PORT=3000
            EOF_ENV

            # Build the Docker image
            sudo docker build -t my_todo_app:latest .

            # Run the container
            sudo docker run -d --name my_todo_app --restart unless-stopped -p 80:3000 -e DB_HOST="***" -e DB_USER="***" -e DB_PASSWORD="***" -e DB_NAME="***" -e PORT=3000 my_todo_app:latest
          EOF
